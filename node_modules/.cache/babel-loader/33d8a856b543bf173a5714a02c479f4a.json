{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\Blank\\\\Desktop\\\\photography\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\Blank\\\\Desktop\\\\photography\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Mover = void 0;\n\nvar Utils_1 = require(\"../../Utils\");\n\nvar Enums_1 = require(\"../../Enums\");\n\nvar Mover = /*#__PURE__*/function () {\n  function Mover(container, particle) {\n    _classCallCheck(this, Mover);\n\n    this.container = container;\n    this.particle = particle;\n  }\n\n  _createClass(Mover, [{\n    key: \"move\",\n    value: function move(delta) {\n      this.moveParticle(delta);\n      this.moveParallax();\n    }\n  }, {\n    key: \"moveParticle\",\n    value: function moveParticle(delta) {\n      var _a;\n\n      var particle = this.particle;\n      var particlesOptions = particle.particlesOptions;\n\n      if (!particlesOptions.move.enable) {\n        return;\n      }\n\n      var container = this.container;\n      var options = container.options;\n      var slowFactor = this.getProximitySpeedFactor();\n      var deltaFactor = options.fpsLimit > 0 ? 60 * delta / 1000 : 3.6;\n      var baseSpeed = (_a = particle.moveSpeed) !== null && _a !== void 0 ? _a : container.retina.moveSpeed;\n      var moveSpeed = baseSpeed / 2 * slowFactor * deltaFactor;\n      this.applyNoise(delta);\n      particle.position.x += particle.velocity.horizontal * moveSpeed;\n      particle.position.y += particle.velocity.vertical * moveSpeed;\n\n      if (particlesOptions.move.vibrate) {\n        particle.position.x += Math.sin(particle.position.x * Math.cos(particle.position.y));\n        particle.position.y += Math.cos(particle.position.y * Math.sin(particle.position.x));\n      }\n    }\n  }, {\n    key: \"applyNoise\",\n    value: function applyNoise(delta) {\n      var particle = this.particle;\n      var particlesOptions = particle.particlesOptions;\n      var noiseOptions = particlesOptions.move.noise;\n      var noiseEnabled = noiseOptions.enable;\n\n      if (!noiseEnabled) {\n        return;\n      }\n\n      var container = this.container;\n\n      if (particle.lastNoiseTime <= particle.noiseDelay) {\n        particle.lastNoiseTime += delta;\n        return;\n      }\n\n      var noise = container.noise.generate(particle);\n      particle.velocity.horizontal += Math.cos(noise.angle) * noise.length;\n      particle.velocity.horizontal = Utils_1.Utils.clamp(particle.velocity.horizontal, -1, 1);\n      particle.velocity.vertical += Math.sin(noise.angle) * noise.length;\n      particle.velocity.vertical = Utils_1.Utils.clamp(particle.velocity.vertical, -1, 1);\n      particle.lastNoiseTime -= particle.noiseDelay;\n    }\n  }, {\n    key: \"moveParallax\",\n    value: function moveParallax() {\n      var container = this.container;\n      var options = container.options;\n\n      if (!options.interactivity.events.onHover.parallax.enable) {\n        return;\n      }\n\n      var particle = this.particle;\n      var parallaxForce = options.interactivity.events.onHover.parallax.force;\n      var mousePos = container.interactivity.mouse.position;\n\n      if (!mousePos) {\n        return;\n      }\n\n      var windowDimension = {\n        height: window.innerHeight / 2,\n        width: window.innerWidth / 2\n      };\n      var parallaxSmooth = options.interactivity.events.onHover.parallax.smooth;\n      var tmp = {\n        x: (mousePos.x - windowDimension.width) * (particle.size.value / parallaxForce),\n        y: (mousePos.y - windowDimension.height) * (particle.size.value / parallaxForce)\n      };\n      particle.offset.x += (tmp.x - particle.offset.x) / parallaxSmooth;\n      particle.offset.y += (tmp.y - particle.offset.y) / parallaxSmooth;\n    }\n  }, {\n    key: \"getProximitySpeedFactor\",\n    value: function getProximitySpeedFactor() {\n      var container = this.container;\n      var options = container.options;\n      var active = Utils_1.Utils.isInArray(Enums_1.HoverMode.slow, options.interactivity.events.onHover.mode);\n\n      if (!active) {\n        return 1;\n      }\n\n      var mousePos = this.container.interactivity.mouse.position;\n\n      if (!mousePos) {\n        return 1;\n      }\n\n      var particlePos = this.particle.getPosition();\n      var dist = Utils_1.Utils.getDistance(mousePos, particlePos);\n      var radius = container.retina.slowModeRadius;\n\n      if (dist > radius) {\n        return 1;\n      }\n\n      var proximityFactor = dist / radius || 0;\n      var slowFactor = options.interactivity.modes.slow.factor;\n      return proximityFactor / slowFactor;\n    }\n  }]);\n\n  return Mover;\n}();\n\nexports.Mover = Mover;","map":{"version":3,"sources":["C:/Users/Blank/Desktop/photography/node_modules/tsparticles/dist/Core/Particle/Mover.js"],"names":["Object","defineProperty","exports","value","Mover","Utils_1","require","Enums_1","container","particle","delta","moveParticle","moveParallax","_a","particlesOptions","move","enable","options","slowFactor","getProximitySpeedFactor","deltaFactor","fpsLimit","baseSpeed","moveSpeed","retina","applyNoise","position","x","velocity","horizontal","y","vertical","vibrate","Math","sin","cos","noiseOptions","noise","noiseEnabled","lastNoiseTime","noiseDelay","generate","angle","length","Utils","clamp","interactivity","events","onHover","parallax","parallaxForce","force","mousePos","mouse","windowDimension","height","window","innerHeight","width","innerWidth","parallaxSmooth","smooth","tmp","size","offset","active","isInArray","HoverMode","slow","mode","particlePos","getPosition","dist","getDistance","radius","slowModeRadius","proximityFactor","modes","factor"],"mappings":"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","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Mover = void 0;\r\nconst Utils_1 = require(\"../../Utils\");\r\nconst Enums_1 = require(\"../../Enums\");\r\nclass Mover {\r\n    constructor(container, particle) {\r\n        this.container = container;\r\n        this.particle = particle;\r\n    }\r\n    move(delta) {\r\n        this.moveParticle(delta);\r\n        this.moveParallax();\r\n    }\r\n    moveParticle(delta) {\r\n        var _a;\r\n        const particle = this.particle;\r\n        const particlesOptions = particle.particlesOptions;\r\n        if (!particlesOptions.move.enable) {\r\n            return;\r\n        }\r\n        const container = this.container;\r\n        const options = container.options;\r\n        const slowFactor = this.getProximitySpeedFactor();\r\n        const deltaFactor = options.fpsLimit > 0 ? (60 * delta) / 1000 : 3.6;\r\n        const baseSpeed = (_a = particle.moveSpeed) !== null && _a !== void 0 ? _a : container.retina.moveSpeed;\r\n        const moveSpeed = (baseSpeed / 2) * slowFactor * deltaFactor;\r\n        this.applyNoise(delta);\r\n        particle.position.x += particle.velocity.horizontal * moveSpeed;\r\n        particle.position.y += particle.velocity.vertical * moveSpeed;\r\n        if (particlesOptions.move.vibrate) {\r\n            particle.position.x += Math.sin(particle.position.x * Math.cos(particle.position.y));\r\n            particle.position.y += Math.cos(particle.position.y * Math.sin(particle.position.x));\r\n        }\r\n    }\r\n    applyNoise(delta) {\r\n        const particle = this.particle;\r\n        const particlesOptions = particle.particlesOptions;\r\n        const noiseOptions = particlesOptions.move.noise;\r\n        const noiseEnabled = noiseOptions.enable;\r\n        if (!noiseEnabled) {\r\n            return;\r\n        }\r\n        const container = this.container;\r\n        if (particle.lastNoiseTime <= particle.noiseDelay) {\r\n            particle.lastNoiseTime += delta;\r\n            return;\r\n        }\r\n        const noise = container.noise.generate(particle);\r\n        particle.velocity.horizontal += Math.cos(noise.angle) * noise.length;\r\n        particle.velocity.horizontal = Utils_1.Utils.clamp(particle.velocity.horizontal, -1, 1);\r\n        particle.velocity.vertical += Math.sin(noise.angle) * noise.length;\r\n        particle.velocity.vertical = Utils_1.Utils.clamp(particle.velocity.vertical, -1, 1);\r\n        particle.lastNoiseTime -= particle.noiseDelay;\r\n    }\r\n    moveParallax() {\r\n        const container = this.container;\r\n        const options = container.options;\r\n        if (!options.interactivity.events.onHover.parallax.enable) {\r\n            return;\r\n        }\r\n        const particle = this.particle;\r\n        const parallaxForce = options.interactivity.events.onHover.parallax.force;\r\n        const mousePos = container.interactivity.mouse.position;\r\n        if (!mousePos) {\r\n            return;\r\n        }\r\n        const windowDimension = {\r\n            height: window.innerHeight / 2,\r\n            width: window.innerWidth / 2,\r\n        };\r\n        const parallaxSmooth = options.interactivity.events.onHover.parallax.smooth;\r\n        const tmp = {\r\n            x: (mousePos.x - windowDimension.width) * (particle.size.value / parallaxForce),\r\n            y: (mousePos.y - windowDimension.height) * (particle.size.value / parallaxForce),\r\n        };\r\n        particle.offset.x += (tmp.x - particle.offset.x) / parallaxSmooth;\r\n        particle.offset.y += (tmp.y - particle.offset.y) / parallaxSmooth;\r\n    }\r\n    getProximitySpeedFactor() {\r\n        const container = this.container;\r\n        const options = container.options;\r\n        const active = Utils_1.Utils.isInArray(Enums_1.HoverMode.slow, options.interactivity.events.onHover.mode);\r\n        if (!active) {\r\n            return 1;\r\n        }\r\n        const mousePos = this.container.interactivity.mouse.position;\r\n        if (!mousePos) {\r\n            return 1;\r\n        }\r\n        const particlePos = this.particle.getPosition();\r\n        const dist = Utils_1.Utils.getDistance(mousePos, particlePos);\r\n        const radius = container.retina.slowModeRadius;\r\n        if (dist > radius) {\r\n            return 1;\r\n        }\r\n        const proximityFactor = dist / radius || 0;\r\n        const slowFactor = options.interactivity.modes.slow.factor;\r\n        return proximityFactor / slowFactor;\r\n    }\r\n}\r\nexports.Mover = Mover;\r\n"]},"metadata":{},"sourceType":"script"}